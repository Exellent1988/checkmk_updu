name: build

on:
  push:
    branches:
    - '**'
    tags-ignore:
    - 'v*'
  pull_request:

jobs:
  build:
    name: Build Checkmk package
    runs-on: ubuntu-latest
    container:
      image: checkmk/check-mk-raw:2.3.0-latest

    env:
      OMD_ROOT: /omd/sites/cmk
      OMD_SITE: cmk
      CMK_SITE_ID: cmk

    steps:
      - name: Initialize Checkmk Site
        run: /docker-entrypoint.sh /bin/true
      
      - uses: actions/checkout@v4
      
      - name: Parse Package File
        run: |
          NAME=$(python3 -c 'print(eval(open("src/info").read())["name"])')
          VERSION=$(cat VERSION)
          echo "Package name: $NAME"
          echo "Version: $VERSION"
          echo "CMKPKG_NAME=$NAME" >> "$GITHUB_ENV"
          echo "CMKPKG_VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "WORKSPACE=$GITHUB_WORKSPACE" >> "$GITHUB_ENV"
      
      - name: Create build directory
        run: |
          mkdir -p $GITHUB_WORKSPACE/build
          chown -R cmk:cmk $GITHUB_WORKSPACE
      
      - name: Setup links
        run: |
          su -m cmk -c "cd '${GITHUB_WORKSPACE}'; export WORKSPACE='$GITHUB_WORKSPACE'; .devcontainer/symlink.sh"
      
      - name: Build Extension
        run: |
          su -l cmk -c "cd '${GITHUB_WORKSPACE}'; export WORKSPACE='$GITHUB_WORKSPACE'; .devcontainer/build.sh"
      
      - name: Verify and upload package
        run: |
          if [ -f "$GITHUB_WORKSPACE/build/${CMKPKG_NAME}-${CMKPKG_VERSION}.mkp" ]; then
            cp $GITHUB_WORKSPACE/build/${CMKPKG_NAME}-${CMKPKG_VERSION}.mkp .
            echo "pkgfile=${CMKPKG_NAME}-${CMKPKG_VERSION}.mkp" >> $GITHUB_OUTPUT
            echo "✅ Package built successfully: ${CMKPKG_NAME}-${CMKPKG_VERSION}.mkp"
          else
            echo "❌ Package not found: $GITHUB_WORKSPACE/build/${CMKPKG_NAME}-${CMKPKG_VERSION}.mkp"
            echo "Available files in build directory:"
            ls -la $GITHUB_WORKSPACE/build/ || echo "Build directory does not exist"
            exit 1
          fi
        id: cmkpkg
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.cmkpkg.outputs.pkgfile }}
          path: ${{ steps.cmkpkg.outputs.pkgfile }}
